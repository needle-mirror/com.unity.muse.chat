/*
 * Muse API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.6
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Unity.Muse.Chat.Client.OpenAPIDateConverter;

namespace Unity.Muse.Chat.Model
{
    /// <summary>
    /// TopicRequest
    /// </summary>
    [DataContract(Name = "TopicRequest")]
    internal partial class TopicRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TopicRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TopicRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TopicRequest" /> class.
        /// </summary>
        /// <param name="history">history (required)</param>
        public TopicRequest(List<SafeChatMessage> history = default(List<SafeChatMessage>))
        {
            // to ensure "history" is required (not null)
            if (history == null)
            {
                throw new ArgumentNullException("history is a required property for TopicRequest and cannot be null");
            }
            this.History = history;
        }

        /// <summary>
        /// Gets or Sets History
        /// </summary>
        [DataMember(Name = "history", IsRequired = true, EmitDefaultValue = true)]
        public List<SafeChatMessage> History { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TopicRequest {\n");
            sb.Append("  History: ").Append(History).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
